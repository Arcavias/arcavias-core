<?xml version="1.0" encoding="UTF-8"?>

<project name="Arcavias" default="all">

	<property name="coredir" value="${project.basedir}" override="true" />
	<property name="extdir" value="${project.basedir}/ext" override="true" />


	<target name="setup" description="Sets up database incl. unit test data">
		<echo msg="Setting up test database" />
		<exec command="php ${coredir}/setup.php unittest" checkreturn="true" logoutput="true"/>
	</target>

	<target name="setupperf" description="Sets up database incl. performance test data">
		<echo msg="Setting up performance data" />
		<exec command="php ${coredir}/setup.php unitperf" checkreturn="true" logoutput="true"/>
	</target>


	<target name="coverage" description="Creates coverage reports">
		<phing target="coverage" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="coverage" haltonfailure="true" dir="${coredir}/controller/frontend" />
		<phing target="coverage" haltonfailure="true" dir="${coredir}/controller/extjs" />
		<phing target="coverage" haltonfailure="true" dir="${coredir}/controller/jobs" />
		<phing target="coverage" haltonfailure="true" dir="${coredir}/client/html" />
		<phing target="coverage" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="coverage" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="coverageext" description="Creates coverage report for specific extension directory">
		<phing target="coverage" haltonfailure="true" dir="${dir}" phingfile="phing.xml" />
	</target>


	<target name="test" description="Executes unit tests">
		<phing target="test" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="test" haltonfailure="true" dir="${coredir}/controller/frontend" />
		<phing target="test" haltonfailure="true" dir="${coredir}/controller/extjs" />
		<phing target="test" haltonfailure="true" dir="${coredir}/controller/jobs" />
		<phing target="test" haltonfailure="true" dir="${coredir}/client/html" />
		<phing target="test" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="test" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="testext" description="Executes tests of specific extension directory">
		<phing target="test" haltonfailure="true" dir="${dir}" phingfile="phing.xml" />
	</target>

	<target name="testperf" description="Executes performance tests">
		<phing target="testperf" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="testperf" haltonfailure="true" dir="${coredir}/client/html" />
		<phing target="testperf" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="testperf" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="check" description="Executes all checks">
		<phing target="check" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="check" haltonfailure="true" dir="${coredir}/controller/frontend" />
		<phing target="check" haltonfailure="true" dir="${coredir}/controller/extjs" />
		<phing target="check" haltonfailure="true" dir="${coredir}/controller/jobs" />
		<phing target="check" haltonfailure="false" dir="${coredir}/client/extjs" />
		<phing target="check" haltonfailure="true" dir="${coredir}/client/html" />
		<phing target="check" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="check" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="checkext" description="Executes checks of specific extension directory">
		<phing target="check" haltonfailure="true" dir="${dir}" phingfile="phing.xml" />
	</target>


	<target name="doc" description="Generates the API documentation">
		<echo msg="Generating API documentation" />
		<delete dir="${coredir}/misc/apidoc" quiet="true" failonerror="false" />
		<phpdocext title="Arcavias API documentation"
			destdir="${coredir}/misc/apidoc"
			output="HTML:frames/Extjs:default,HTML:Smarty:PHP"
			sourcecode="true"
			templatebase="misc/phpdoc"
			undocumentedelements="true">
			<fileset dir="${coredir}">
				<include name="Arcavias.php" />
			</fileset>
			<fileset dir="client/html/src">
				<include name="**/*.php" />
			</fileset>
			<fileset dir="controller/frontend/src">
				<include name="**/*.php" />
			</fileset>
			<fileset dir="controller/extjs/src">
				<include name="**/*.php" />
			</fileset>
			<fileset dir="controller/jobs/src">
				<include name="**/*.php" />
			</fileset>
			<fileset dir="lib/mshoplib/src">
				<include name="**/*.php" />
			</fileset>
			<fileset dir="lib/mwlib/src">
				<include name="**/*.php" />
			</fileset>
		</phpdocext>
	</target>


	<target name="clean" description="Cleans up temporary files">
		<phing target="clean" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="clean" haltonfailure="true" dir="${coredir}/controller/frontend" />
		<phing target="clean" haltonfailure="true" dir="${coredir}/controller/extjs" />
		<phing target="clean" haltonfailure="true" dir="${coredir}/controller/jobs" />
		<phing target="clean" haltonfailure="true" dir="${coredir}/client/extjs" />
		<phing target="clean" haltonfailure="true" dir="${coredir}/client/html" />
		<phing target="clean" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="clean" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="i18n" description="Creates all translation files">
		<phing target="i18n" haltonfailure="true" dir="${coredir}/client/html" />
		<phing target="i18n" haltonfailure="true" dir="${coredir}/controller/frontend" />
		<phing target="i18n" haltonfailure="true" dir="${coredir}/controller/jobs" />
		<phing target="i18n" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="i18n" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="build" description="Creates all files to be generated" >
		<taskdef name="jsbpackages" classname="MShopJsbPackageTask" classpath="${coredir}/misc/phing" />
		<jsbpackages />
		<exec command="tx pull -a" checkreturn="true" logoutput="true"/>
		<phing target="build" haltonfailure="true" dir="${coredir}/client/html" />
		<phing target="build" haltonfailure="true" dir="${coredir}/controller/frontend" />
		<phing target="build" haltonfailure="true" dir="${coredir}/controller/jobs" />
		<phing target="build" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="build" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
    </target>


	<target name="deploy" description="Executes all deployments" depends="clean,build">
		<propertyprompt propertyName="version" promptText="Enter release version" promptCharacter=":" useExistingValue="true"/>
		<exec command="tar -c --bzip2 --exclude-from=.exclude -f ../arcavias-core_${version}.tar.bz2 ."
			checkreturn="true" logoutput="true"/>
		<filehash file="../arcavias-core_${version}.tar.bz2" hashtype="1" />
		<echo msg="SHA1 hash value: ${filehashvalue}" />
	</target>


	<target name="release" description="Creates new release" depends="deploy">
		<propertyprompt propertyName="version" promptText="Enter release version" promptCharacter=":" useExistingValue="true"/>
		<exec command="git branch ${version}" checkreturn="true" logoutput="true" />
		<exec command="git tag -a arcavias-core_${version} -m 'Release ${version}'" checkreturn="true" logoutput="true" />
		<exec command="git push origin ${version}" checkreturn="true" logoutput="true" />
		<exec command="git push --tags" checkreturn="true" logoutput="true" />
	</target>


	<target name="all" depends="setup,test,check" description="Executes all essential targets for testing" />

</project>
